#! /bin/sh
########################
###### Variables #######
########################
# vars

output_type="accept: application/json"
content_type="Content-Type: application/x-sah-ws-4-call+json"
authorisation="Authorization: X-Sah "
login="Authorization: X-Sah-Login"

context="/var/tmp/livebox_context"
cookie="/var/tmp/livebox_cookies"
res=""
verbose=""

#######################
##### Functions #######
#######################
log() 
{
if [ "$verbose" = "y" ]; then
	echo "$1" >> /dev/stdout
fi
}

##########################################
### log information on log server      ###
### $1 = log level name                ###
### valid values are : emerg alert     ###
### crit err warning notice info debug ###
### $2 : message to log                ###
##########################################
logNas()
{
if [ -e /usr/bin/logger ]; then
	logger -n $LOG_SRV -p user.$1 -t "$HOSTNAME" -s "$2"
else
	echo "$2" >> /dev/stdout
fi
}

GetFromBox() 
{
	log "---------------"
	log "Try to get WAN Speed from $BOX_IP."
	# get authorization	
	curl -s -o $context -k "http://"$BOX_IP"/ws" -c $cookie -X POST --compressed -H "$login" -H "$content_type" --data-raw '{"service":"sah.Device.Information","method":"createContext","parameters":{"applicationName":"webui","username":"'$BOX_USER'","password":"'$BOX_PWD'"}}'
	# set authorization context ID
	CTX=$(cat $context | jq -c .data.contextID | tr -d '"')
	GRP=$(cat $context | jq -c .data.groups)
	IE=$CTX'","username":"'$BOX_USER'","groups":'$GRP'}}'
#	log "IE : $IE"
	ID2=$(tail -n1 $cookie | sed 's/#HttpOnly_'$BOX_IP'\tFALSE\t[/]\tFALSE\t0\t//1' | sed 's/sessid\t/sessid=/1')
#	log "ID2 : $ID2"
	res=$(curl -s -k "http://"$BOX_IP"/ws" -X POST -H "$content_type" -H "$authorisation"$IE  -H "Cookie: "$ID2 --data-raw '{"service":"'$service'","method":"'$method'","parameters":{'$param'}}')
}

#################
##### START #####
#################
# Get Params
if [ "$1" = "-v" ]; then
	verbose="y"
fi

echo "*=*=**=*==*=*="
DATE=$(date +'%Y-%m-%d %H:%M') 
echo $DATE  > /dev/stdout

log "Start speedtest diagnostic"
service=AutoDiag 
method=executeDiagnostics 
param='"id":"speedService"'
GetFromBox

log "Wait for the Diagnostics is completed"
Service="AutoDiag" 
method="getDiagnosticsState"
i=0
until [ "$diag" = "speedService" ] && [ "$diagstate" = "Complete" ]
do
	sleep 5
	GetFromBox
	diagstate=$(echo $res | jq -c .status.DiagnosticsState | tr -d '"')
	diag=$(echo $res | jq -c .status.Diagnostics | tr -d '"' )
	if [ "$diagstate" = "Error_Internal" ];  then                                                                                                       
                logNas "alert" "$diag : $diagstate aborting"                                                                                                    
                break                                                                                                                                       
        fi
	i=$(expr $i + 1)
	log "$diag : $diagstate trial $i"
	if [ $i -gt 10 ]; then
		logNas "warning" "Too many trials, aborting"
		break
	fi
done

if [ "$diag" = "speedService" ] && [ "$diagstate" = "Complete" ]; then
	service="SpeedTest"
	method="getWANResults"
	param=""
	GetFromBox
  
	DOWN=$(echo "scale=2; $(echo $res | jq -c .status.Downstream.rate) / 1000" | bc -l)
	UP=$(echo "scale=2; $(echo $res | jq -c .status.Upstream.rate) / 1000" | bc -l)
	datedeb=$(echo $res | jq -c .status.Downstream.start)
	logNas "info" "Debit from Box upload : $UP - download : $DOWN"
	#log "upload : $UP"
	#log "download : $DOWN"
	#log "Date : $datedeb"	
	if [ -n "$DOMOTICZ_SERV" ]; then
		logNas "info" "Sending results to Domoticz : $DOMOTICZ_SERV"
		res=$(curl -s -S --user $DOMOTICZ_USER:$DOMOTICZ_PASS "http://$DOMOTICZ_SERV:$DOMOTICZ_PORT/json.htm?type=command&param=udevice&idx=$NUM_SENSOR_DOWN&nvalue=0&svalue=$DOWN")
		status=$(echo $res | jq -c .status)
		if [ ! "$status" = "OK" ]; then
                        logNas "alert" "DOWN : $res"
                else
                        logNas "info" "DOWN Status : $status"
			res=$(curl -s -S --user $DOMOTICZ_USER:$DOMOTICZ_PASS "http://$DOMOTICZ_SERV:$DOMOTICZ_PORT/json.htm?type=command&param=udevice&idx=$NUM_SENSOR_UP&nvalue=0&svalue=$UP")	
			status=$(echo $res | jq -c .status)
			if [ ! "$status" = "OK" ]; then
                        	logNas "alert" "UP : $res"
                	else
                        	logNas "info" "UP Status : $status"
                	fi
                fi
	fi
	if [ -n "$SQL_SERV" ]; then
      		logNas "info" "Sending result to SQL Server $SQL_SERV"
		echo "INSERT INTO \`debit\`(\`date\`,\`upload\`, \`download\`) VALUES ("\"$DATE\"",$UP,$DOWN);"  > /var/tmp/insert.sql
		mysql --user=$SQL_USER --host=$SQL_SERV --port=$SQL_PORT --password=$SQL_PASS  $SQL_BASE < /var/tmp/insert.sql
	fi
fi
rm /var/tmp/* > /dev/null
